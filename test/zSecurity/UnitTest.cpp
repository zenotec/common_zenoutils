
#include <string>

#include <zutils/zLog.h>
using namespace zUtils;
ZLOG_MODULE_INIT(zLog::Log::MODULE_TEST);

#include "UnitTest.h"
#include "zSecurityTest.h"

const uint8_t eapol_pkt_1[] =
{
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, /* ........ */
    0x02, 0x03, 0x04, 0x05, 0x88, 0x8e, 0x02, 0x03,
    0x00, 0x5f, /* ......._ */
    0x02, 0x00, 0x8a, 0x00, 0x10, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0xd0, 0x11, /* ........ */
    0x97, 0xff, 0xff, 0xff, 0xb0, 0xd9, 0x31, 0x05, /* ......1. */
    0x9d, 0xe4, 0xc9, 0xc7, 0x1e, 0xa1, 0x0f, 0x93, /* ........ */
    0xbe, 0x6f, 0xe6, 0x1c, 0x5a, 0x65, 0xc1, 0xfe, /* .o..Ze.. */
    0x4f, 0x4a, 0xa8, 0x93, 0xa5, 0x00, 0x00, 0x00, /* OJ...... */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00        /* ....... */
};
const size_t eapol_pkt_1_len = sizeof(eapol_pkt_1);

const uint8_t eapol_pkt_2[] =
{
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x88, 0x8e, 0x01, 0x03,
    0x00, 0x75, 0x02, 0x01, 0x0a, 0x00, 0x00, 0x00,
    0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x85, 0xa4, /* ........ */
    0xa8, 0xf4, 0x3a, 0xe4, 0x0f, 0xc7, 0xa2, 0x2a, /* ..:....* */
    0x2b, 0x5f, 0xa1, 0xc9, 0x70, 0x66, 0xea, 0xd6, /* +_..pf.. */
    0xf9, 0x25, 0x1b, 0xb1, 0xbb, 0x0f, 0x27, 0x2c, /* .%....', */
    0xc0, 0x1c, 0x4b, 0xc8, 0xe4, 0x00, 0x00, 0x00, /* ..K..... */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x53, 0x17, /* ......S. */
    0xe9, 0x3c, 0x41, 0xbe, 0x11, 0x6c, 0x85, 0xf8, /* .<A..l.. */
    0xda, 0x59, 0xc8, 0xf3, 0xff, 0x00, 0x16, 0x30, /* .Y.....0 */
    0x14, 0x01, 0x00, 0x00, 0x0f, 0xac, 0x04, 0x01, /* ........ */
    0x00, 0x00, 0x0f, 0xac, 0x04, 0x01, 0x00, 0x00, /* ........ */
    0x0f, 0xac, 0x02, 0x80, 0x00                    /* ..... */
};
const size_t eapol_pkt_2_len = sizeof(eapol_pkt_2);

const uint8_t eapol_pkt_3[] =
{
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, /* ........ */
    0x02, 0x03, 0x04, 0x05, 0x88, 0x8e, 0x02, 0x03,
    0x00, 0x97, /* ........ */
    0x02, 0x13, 0xca, 0x00, 0x10, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x01, 0xc2, 0xd0, 0x11, /* ........ */
    0x97, 0xff, 0xff, 0xff, 0xb0, 0xd9, 0x31, 0x05, /* ......1. */
    0x9d, 0xe4, 0xc9, 0xc7, 0x1e, 0xa1, 0x0f, 0x93, /* ........ */
    0xbe, 0x6f, 0xe6, 0x1c, 0x5a, 0x65, 0xc1, 0xfe, /* .o..Ze.. */
    0x4f, 0x4a, 0xa8, 0x93, 0xa5, 0x00, 0x00, 0x00, /* OJ...... */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x97, 0x58, /* .....t.X */
    0x68, 0x36, 0x8b, 0x98, 0xb5, 0xc3, 0x4b, 0x14, /* h6....K. */
    0x71, 0x2d, 0xa3, 0xee, 0xa7, 0x00, 0x38, 0x66, /* q-....8f */
    0x49, 0x94, 0xa1, 0xad, 0xda, 0x9d, 0xb6, 0xee, /* I....... */
    0xae, 0xf8, 0x1c, 0x5f, 0x2c, 0x04, 0x18, 0x47, /* ..._,..G */
    0x37, 0xbd, 0x00, 0xc7, 0xb9, 0xdf, 0x3c, 0x93, /* 7.....<. */
    0xfd, 0x38, 0xa4, 0x75, 0x8f, 0xe0, 0x78, 0xf8, /* .8.u..x. */
    0xad, 0x9b, 0x3f, 0x17, 0xc5, 0xb7, 0xb9, 0x88, /* ..?..... */
    0xf5, 0xad, 0x03, 0xa0, 0x1f, 0xdf, 0x72, 0x6d, /* ......rm */
    0xf8, 0x5e, 0x65, 0xe0, 0x9e, 0x91, 0x90        /* .^e.... */
};
const size_t eapol_pkt_3_len = sizeof(eapol_pkt_3);

const uint8_t eapol_pkt_4[] =
{
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x88, 0x8e, 0x01, 0x03,
    0x00, 0x5f, /* ......._ */
    0x02, 0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
    0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0x52, 0x7a, /* ......Rz */
    0x9b, 0x48, 0xac, 0xa1, 0x08, 0xe4, 0xf2, 0x91, /* .H...... */
    0x77, 0xd6, 0xc9, 0x2d, 0x1e, 0x00, 0x00
};
const size_t eapol_pkt_4_len = sizeof(eapol_pkt_4);

int
main(int argc, const char **argv)
{

  // Setup logging for testing
  zLog::FileConnector conn("UnitTest.zlog");
  zLog::Manager::Instance().RegisterConnector(zLog::Log::LEVEL_ALL, &conn);
  zLog::Manager::Instance().SetMaxLevel(zLog::Log::MODULE_TEST, zLog::Log::LEVEL_DEBUG);

  UTEST_INIT();

  UTEST_TEST(zSecurityTest_Defaults, 0);
  UTEST_TEST(zSecurityTest_GetSet, 0);
  UTEST_TEST(zSecurityTest_Handshake_Mes1, 0);
  UTEST_TEST(zSecurityTest_Handshake_Mes2, 0);
  UTEST_TEST(zSecurityTest_Handshake_Mes3, 0);
  UTEST_TEST(zSecurityTest_Handshake_Mes4, 0);
  zLog::Manager::Instance().UnregisterConnector(zLog::Log::LEVEL_ALL);

  UTEST_FINI();

}
